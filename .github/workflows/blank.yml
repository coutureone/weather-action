name: News Brief Bot

on:
  push:
    branches:
      - master # 推荐指定分支，如果没有则保持空
  schedule:
    # UTC 22:38 相当于北京时间（+8）的早上 06:38
    - cron: "38 22 * * *" 

jobs:
  bot:
    runs-on: ubuntu-latest
    
    steps:
      - name: 'Checkout codes'
        # 升级到 v4，确保安全性
        uses: actions/checkout@v4 

      - name: python env
        # 升级到 actions/setup-python@v5
        uses: actions/setup-python@v5 
        with:
          # 使用通配形式 '3.9' 解决精确版本找不到的问题
          python-version: '3.9' 

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          pip install bs4

      - name: 'Get DataSource'
        run: curl https://news.topurl.cn > ./result.html

      - name: 'Get Info'
        run: python ./getInfo.py

      - name: 'Get Date'
        run: |
          # 设置东八区时间
          echo "REPORT_DATE=$(TZ=':Asia/Shanghai' date '+%Y-%m-%d %T')" >> $GITHUB_ENV
          echo "TODAY_DATE=$(TZ=':Asia/Shanghai' date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: 'Get TEXT'
        run: |
          # 使用多行字符串安全地设置环境变量 FILE_TEXT
          echo 'FILE_TEXT<<EOF' >> $GITHUB_ENV
          cat ./result.txt >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

#      - name: 'Send mail'
#        uses: dawidd6/action-send-mail@master
#        with:
#          server_address: smtp.163.com
#          server_port: 465
#          username: ${{ secrets.MAIL_USER_NMAE }}
#          password: ${{ secrets.MAIL_PWD }}
#          subject: 今日新闻简报推送 (${{env.REPORT_DATE}})
#          body: file://result.txt
#          to: coutureone@163.com
#          from: GitHub Actions
#          content_type: text/html

      - name: '发送到钉钉群 (多个机器人)'
        env:
          DINGTALK_WEBHOOK_1: ${{ secrets.DINGTALK_WEBHOOK }}    # 第一个机器人
          DINGTALK_SECRET_1: ${{ secrets.DINGTALK_SECRET }}      # 第一个机器人的密钥
          DINGTALK_WEBHOOK_2: ${{ secrets.DINGTALK_WEBHOOK_2 }} # 第二个机器人
          DINGTALK_SECRET_2: ${{ secrets.DINGTALK_SECRET_2 }}    # 第二个机器人的密钥
        run: |
          # 安装必要工具
          sudo apt-get update -y
          sudo apt-get install -y openssl coreutils
          
          # 定义发送函数
          send_to_dingtalk() {
            local webhook=$1
            local secret=$2
            
            # 检查 webhook 是否存在
            if [ -z "$webhook" ]; then
                echo "Warning: Webhook not set for a bot. Skipping."
                return 0
            fi

            # 获取当前时间戳（毫秒）
            timestamp=$(date +%s%3N)
            
            # 计算签名
            string_to_sign="${timestamp}\n${secret}"
            sign=$(echo -ne "$string_to_sign" | openssl dgst -sha256 -hmac "$secret" -binary | base64 | tr -d '\n')
            
            # URL编码签名
            sign=$(echo $sign | sed 's/+/%2B/g; s/\//%2F/g; s/=/%3D/g')
            
            # 构造完整URL
            url="${webhook}&timestamp=${timestamp}&sign=${sign}"
            
            # 构建JSON消息体
            # 注意：此处 $FILE_TEXT 是从 GITHUB_ENV 读取的，在 run 块中需要注意引号和换行符的处理
            # 已经使用了 sed 进行 JSON 安全转义
            content=$(echo "$FILE_TEXT" | sed 's/"/\\"/g' | sed "s/'/\\\\'/g")
            
            json_data="{
              \"msgtype\": \"text\",
              \"text\": {
                \"content\": \"$content\"
              },
              \"at\": {
                \"isAtAll\": false
              }
            }"
            
            # 发送请求
            echo "发送钉钉消息到机器人 $webhook..."
            curl -s -o /dev/null -w "HTTP状态码: %{http_code}\n" "$url" \
                 -H "Content-Type: application/json" \
                 -d "$json_data"
            echo "钉钉消息发送完成！"
          }
          
          # 发送给第一个机器人
          send_to_dingtalk "$DINGTALK_WEBHOOK_1" "$DINGTALK_SECRET_1"
          
          # 发送给第二个机器人
          send_to_dingtalk "$DINGTALK_WEBHOOK_2" "$DINGTALK_SECRET_2"

      # Telegram通知（可选）
      # - name: Telegram通知
      #   run: |
      #     curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
      #     -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
      #     -d "text=${{env.FILE_TEXT}}"

      - name: '打完收工,提交代码!'
        run: |
          git config --local user.email "couturecome@gamil.com"
          git config --local user.name "coutureone"
          # 使用 GITHUB_TOKEN 是更安全的做法，这里假设 MYGG_TOKEN 是具有 repo 权限的个人访问令牌
          git remote set-url origin https://${{ github.actor }}:${{ secrets.MYGG_TOKEN }}@github.com/${{ github.repository }}
          git pull
          currentDate=${{env.TODAY_DATE}}
          # 创建并复制文件到以年份命名的文件夹中
          mkdir -p  ${currentDate%%-*} && cp result.txt ${currentDate%%-*}/${currentDate}.txt
          git add .
          git commit -m "Update By Github Action Bot (${{env.TODAY_DATE}})"
          git push
